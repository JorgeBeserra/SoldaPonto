name: Build firmware

on:
  push:
    branches: 
      - main  # ou seu branch padrão
    paths:
      - 'SoldaPonto.ino'  # Monitora apenas esse arquivo
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Arduino CLI
        uses: arduino/setup-arduino-cli@v2

      - name: Add ESP8266 Core URL
        run: |
          arduino-cli config init
          arduino-cli config add board_manager.additional_urls https://arduino.esp8266.com/stable/package_esp8266com_index.json

      - name: Install ESP8266 core
        run: |
          arduino-cli core update-index
          arduino-cli core install esp8266:esp8266
      
      - name: Extract firmware version
        id: version
        run: |
          VERSION=$(grep -Po '(?<=#define FIRMWARE_VERSION ")[^"]*' SoldaPonto.ino)
          echo "Firmware version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Install dependencies
        run: |
          arduino-cli lib install "Adafruit GFX Library"
          arduino-cli lib install "Adafruit SSD1331 OLED Driver Library for Arduino"   # adicione outras se necessário
          arduino-cli lib install "RotaryEncoder" 
      
      - name: Create Git Tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git fetch --tags
          TAG_EXISTS=$(git tag -l "v${{ steps.version.outputs.version }}")
          if [ "$TAG_EXISTS" ]; then
            echo "Tag v${{ steps.version.outputs.version }} already exists. Skipping tag creation."
          else
            git tag -a v${{ steps.version.outputs.version }} -m "Release v${{ steps.version.outputs.version }}"
            git push origin v${{ steps.version.outputs.version }}
          fi

      - name: Compile firmware
        run: |
          arduino-cli compile --fqbn esp8266:esp8266:nodemcuv2 --export-binaries --output-dir build .
          mv build/*.bin build/SoldaPonto.bin

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          name: "Firmware v${{ steps.version.outputs.version }}"
          tag_name: "v${{ steps.version.outputs.version }}"
          files: build/SoldaPonto.bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
